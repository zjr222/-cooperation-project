[{"H:\\个人项目\\CooperationProjects\\cooperation-project\\client\\src\\index.js":"1","H:\\个人项目\\CooperationProjects\\cooperation-project\\client\\src\\App.js":"2","H:\\个人项目\\CooperationProjects\\cooperation-project\\client\\src\\page\\index.js":"3","H:\\个人项目\\CooperationProjects\\cooperation-project\\client\\src\\components\\Index\\index.js":"4","H:\\个人项目\\CooperationProjects\\cooperation-project\\client\\src\\components\\RankList\\index.js":"5","H:\\个人项目\\CooperationProjects\\cooperation-project\\client\\src\\components\\Footer\\index.js":"6","H:\\个人项目\\CooperationProjects\\cooperation-project\\client\\src\\components\\Header\\index.js":"7","H:\\个人项目\\CooperationProjects\\cooperation-project\\client\\src\\components\\Main\\index.js":"8","H:\\个人项目\\CooperationProjects\\cooperation-project\\client\\src\\components\\NotFound\\index.js":"9","H:\\个人项目\\CooperationProjects\\cooperation-project\\client\\src\\store\\index.js":"10","H:\\个人项目\\CooperationProjects\\cooperation-project\\client\\src\\services\\getData.js":"11","H:\\个人项目\\CooperationProjects\\cooperation-project\\client\\src\\store\\reducer\\index.js":"12","H:\\个人项目\\CooperationProjects\\cooperation-project\\client\\src\\components\\RatingComp\\index.js":"13","H:\\个人项目\\CooperationProjects\\cooperation-project\\client\\src\\store\\reducer\\Movies.js":"14","H:\\个人项目\\CooperationProjects\\cooperation-project\\client\\src\\store\\action\\Movies.js":"15","H:\\个人项目\\CooperationProjects\\cooperation-project\\client\\src\\components\\Layout\\index.js":"16","H:\\个人项目\\CooperationProjects\\cooperation-project\\client\\src\\components\\DetailsComp\\index.js":"17","H:\\个人项目\\CooperationProjects\\cooperation-project\\client\\src\\components\\CommonComp\\CommentComp\\index.js":"18","H:\\个人项目\\CooperationProjects\\cooperation-project\\client\\src\\components\\CommonComp\\MovieComp\\index.js":"19","H:\\个人项目\\CooperationProjects\\cooperation-project\\client\\src\\components\\MovieComment\\index.js":"20","H:\\个人项目\\CooperationProjects\\cooperation-project\\client\\src\\components\\CommonComp\\PopularFilmComp\\index.js":"21","H:\\个人项目\\CooperationProjects\\cooperation-project\\client\\src\\components\\AllMoviesActors\\index.js":"22","H:\\个人项目\\CooperationProjects\\cooperation-project\\client\\src\\components\\ActorIntroduce\\index.js":"23"},{"size":231,"mtime":1610003756982,"results":"24","hashOfConfig":"25"},{"size":341,"mtime":1610003634765,"results":"26","hashOfConfig":"25"},{"size":654,"mtime":1610510335367,"results":"27","hashOfConfig":"25"},{"size":4786,"mtime":1610955059307,"results":"28","hashOfConfig":"25"},{"size":1523,"mtime":1610003756981,"results":"29","hashOfConfig":"25"},{"size":139,"mtime":1609164907753,"results":"30","hashOfConfig":"25"},{"size":1041,"mtime":1610602130616,"results":"31","hashOfConfig":"25"},{"size":948,"mtime":1611027115625,"results":"32","hashOfConfig":"25"},{"size":498,"mtime":1610004643307,"results":"33","hashOfConfig":"25"},{"size":131,"mtime":1610510260407,"results":"34","hashOfConfig":"25"},{"size":2528,"mtime":1611027709425,"results":"35","hashOfConfig":"25"},{"size":120,"mtime":1610510256710,"results":"36","hashOfConfig":"25"},{"size":395,"mtime":1610951843713,"results":"37","hashOfConfig":"25"},{"size":393,"mtime":1610510251602,"results":"38","hashOfConfig":"25"},{"size":370,"mtime":1610510216774,"results":"39","hashOfConfig":"25"},{"size":743,"mtime":1610191895276,"results":"40","hashOfConfig":"25"},{"size":11797,"mtime":1610955340940,"results":"41","hashOfConfig":"25"},{"size":1187,"mtime":1610354147493,"results":"42","hashOfConfig":"25"},{"size":1737,"mtime":1611050343061,"results":"43","hashOfConfig":"25"},{"size":3769,"mtime":1610510590957,"results":"44","hashOfConfig":"25"},{"size":1216,"mtime":1610950313123,"results":"45","hashOfConfig":"25"},{"size":4949,"mtime":1611027108160,"results":"46","hashOfConfig":"25"},{"size":6952,"mtime":1611051085589,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"h6ehlu",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"50"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"50"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"50"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"50"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"50"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"50"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"H:\\个人项目\\CooperationProjects\\cooperation-project\\client\\src\\index.js",[],["102","103"],"H:\\个人项目\\CooperationProjects\\cooperation-project\\client\\src\\App.js",[],"H:\\个人项目\\CooperationProjects\\cooperation-project\\client\\src\\page\\index.js",[],"H:\\个人项目\\CooperationProjects\\cooperation-project\\client\\src\\components\\Index\\index.js",["104"],"import React, {Component} from 'react'\r\n import data from '../../services/getData'\r\n import {Carousel} from 'antd'\r\n import MovieComp from '../CommonComp/MovieComp'\r\n import styles from './index.module.css'\r\nimport PopularFilmComp from '../CommonComp/PopularFilmComp'\r\n export default class Main extends Component{\r\n    constructor(props){\r\n       super(props);\r\n       this.state={\r\n          title:null,\r\n          hot:[],\r\n          hotMovies:[],\r\n          popularFilm:[],\r\n       }\r\n    }\r\n    /**\r\n    * @param {Array} includePage [] 外层包装\r\n    * @param {Array} pages [] 轮播的总数\r\n    * @param {Array} page  [] 每个轮播的个数\r\n    * @param {Array} data 数据\r\n    * @param {JSX.Element} Comp 组件\r\n    */\r\n   //  Carousel = (pages,data,Comp)=>{\r\n   //          for(let i = 1 ;i < data.length / 5 + 1; i++){\r\n   //             pages.push(data.slice((i-1)*5,i*5))\r\n   //          }  \r\n   //          return pages.map((k,v)=>{\r\n   //           const page = k.map((d,i)=>{\r\n   //                return (\r\n   //                   <div key={i}>\r\n   //                      <Comp img={d.img} id={d.id} rate={d.rate} movieName={d.title} img={d.img}/>\r\n   //                   </div>\r\n   //                )\r\n   //             })\r\n   //             return (\r\n   //                <div>{page}</div>\r\n   //             )\r\n   //          })\r\n   //  }\r\n    componentDidMount() {\r\n       const self = this;\r\n       data.getInProgressHot().then(res=>{ //正在热映\r\n         this.setState({\r\n            title:res.title\r\n         })\r\n         let pages = [];\r\n         for(let i = 1 ;i < res.everyMovies.length / 5 + 1; i++){\r\n            pages.push(res.everyMovies.slice((i-1)*5,i*5))\r\n         }  \r\n         const hotpage = pages.map((k,v)=>{\r\n            const page = k.map((d,i)=>{\r\n               return (\r\n                  <div className={styles.movies} key={i}>\r\n                     <MovieComp actors={d.actors} id={d.id} movieName={d.movieName} rate={d.rate} duration={d.duration} img={d.img} region={d.region} year={d.year} director={d.director} rater={d.rater} />\r\n                  </div>\r\n               )\r\n            })\r\n            return (\r\n               <div className={styles.car}>{page}</div>\r\n            )\r\n          })\r\n          self.setState({\r\n             hot:hotpage\r\n          })\r\n       })\r\n       data.getMoviesPage().then(res=>{ //热门电影\r\n         let pages = [];\r\n         for(let i = 1 ;i < res.subjects.length / 10 + 1; i++){\r\n             pages.push(res.subjects.slice((i-1)*10,i*10))\r\n         }  \r\n         const moviesPage = pages.map((k,v)=>{\r\n          const page = k.map((d,i)=>{\r\n               return (\r\n                  <div className={styles.item2} key={i}>\r\n                     <MovieComp img={d.img} id={d.id} rate={d.rate} movieName={d.title} img={d.img}/>\r\n                  </div>\r\n               )\r\n            })\r\n            return (\r\n               <div className={styles.page}>{page}</div>\r\n            )\r\n         })\r\n          self.setState({\r\n             hotMovies:moviesPage\r\n          })\r\n       })\r\n       data.getPopularFilmReviews().then(res=>{ //正在热映\r\n          const popular = res.reviewMovs.map((k,v)=>{\r\n            //  console.log(k)\r\n             return (\r\n                <PopularFilmComp people={k.peopleComment} id={k.id} rate={k.rate} movieName={k.moiveNames[0]} contents={k.contents} img={k.img} question={k.question}/>\r\n             )\r\n          })\r\n          self.setState({\r\n             popularFilm:[...popular]\r\n          })\r\n       })\r\n    }\r\n \r\n    render() {\r\n       return ( \r\n          <div className={styles.box}> \r\n             <div className={styles.hotMovies}>\r\n                <h2 className={styles.title}>{this.state.title}</h2>\r\n                <div className={styles.hot}>\r\n                     <ul>  \r\n                        <Carousel autoplay>\r\n                           {this.state.hot}\r\n                        </Carousel>\r\n                     </ul>\r\n                </div>\r\n             </div>\r\n             <div className={styles.moviePage}>\r\n                <h2 className={styles.title}>最近热门电影</h2>\r\n                <div className={styles.moviesPage}>\r\n                     <ul>  \r\n                        <Carousel autoplay dots={{className:\"carousel\"}}>\r\n                           {this.state.hotMovies}\r\n                        </Carousel>\r\n                     </ul>\r\n                </div>\r\n             </div>\r\n             <div className={styles.popular}>\r\n                <h2 className={styles.title}>{this.state.popularFilm.titleIndexCon}</h2>\r\n                <div className={styles.reviews}>\r\n                   {this.state.popularFilm}\r\n                </div>\r\n             </div>\r\n          </div>\r\n       )\r\n    }\r\n \r\n }","H:\\个人项目\\CooperationProjects\\cooperation-project\\client\\src\\components\\RankList\\index.js",[],"H:\\个人项目\\CooperationProjects\\cooperation-project\\client\\src\\components\\Footer\\index.js",[],"H:\\个人项目\\CooperationProjects\\cooperation-project\\client\\src\\components\\Header\\index.js",[],"H:\\个人项目\\CooperationProjects\\cooperation-project\\client\\src\\components\\Main\\index.js",[],"H:\\个人项目\\CooperationProjects\\cooperation-project\\client\\src\\components\\NotFound\\index.js",[],["105","106"],"H:\\个人项目\\CooperationProjects\\cooperation-project\\client\\src\\store\\index.js",[],"H:\\个人项目\\CooperationProjects\\cooperation-project\\client\\src\\services\\getData.js",["107"],"import axios from 'axios';\r\nexport default  {\r\n    //正在热映\r\n    getInProgressHot() {\r\n        return axios.get('/home/hoting').then(res => {\r\n            return res.data;\r\n        })\r\n    },\r\n    //热门电影\r\n    getMoviesPage() {\r\n        return axios.get('/home/hot').then(res => {\r\n            return res.data;\r\n        })\r\n    },\r\n    //最受欢迎影评\r\n    getPopularFilmReviews() {\r\n        return axios.get('/home/popularFilmReviews').then(res => {\r\n            return res.data;\r\n        })\r\n    },\r\n    //排行榜\r\n    getSortMovies() {\r\n        return axios.get('/sort/newest').then(res => {\r\n            return res.data;\r\n        })\r\n    },\r\n    //分类\r\n    getClasseMovie() {\r\n        return axios.get('/classe').then(res => {\r\n            return res.data;\r\n        })\r\n    },\r\n    //电影详情描述\r\n    getMovieDetail(id) {\r\n        return axios.get(`/movie/detail`,{params:{id}}).then(res => {\r\n            return res.data;\r\n        })\r\n    },\r\n    //当前电影页部分参与演员\r\n    getActorsInMovie(id){\r\n        return axios.get(`/movie/detail/lessactors`,{params:{id}}).then(res=>{\r\n            return res.data;\r\n        })\r\n    },\r\n    //演员的详情\r\n    getActorDetail(id) {\r\n        return axios.get('/actor/detail',{params:{id}}).then(res => {\r\n            return res.data;\r\n        })\r\n    },\r\n    //\r\n    getMovieAllActorMsg(id){\r\n        return axios.get('/movie/actors',{params:{id}}).then(res => {\r\n            return res.data;\r\n        })\r\n    },\r\n    //某个演员的所有作品\r\n    getActorAllMovie({id, sortby = 'vote', format = 'pic', start = 0} = {}){\r\n        return axios.get('/actor/product',{params:{id, sortby, format, start}}).then(res => {\r\n            return res.data;\r\n        })\r\n    },\r\n    //当前电影的部分评论\r\n    getCommentInMovie(id){\r\n        return axios.get('/movie/detail/lesscomments',{params:{id}}).then(res => {\r\n            return res.data;\r\n        })\r\n    },\r\n    //某个电影的全部评论\r\n    getAllCommentsInMovie({\r\n        id,\r\n        start = 20,\r\n        sort = 'new_score',\r\n        limit = 20,\r\n        status = 'P',\r\n        percent_type= '',\r\n      } = {}){\r\n        return axios.get('/movie/comments',{params:{id,start,sort,limit,status,percent_type}}).then(res => {\r\n            return res.data;\r\n        })\r\n    },\r\n    //喜欢某部电影的还喜欢看\r\n    getLikeByMovie(id){\r\n        return axios.get('/movie/detail/other',{params:{id}}).then(res => {\r\n            return res.data;\r\n        })\r\n    },\r\n}","H:\\个人项目\\CooperationProjects\\cooperation-project\\client\\src\\store\\reducer\\index.js",[],"H:\\个人项目\\CooperationProjects\\cooperation-project\\client\\src\\components\\RatingComp\\index.js",[],"H:\\个人项目\\CooperationProjects\\cooperation-project\\client\\src\\store\\reducer\\Movies.js",["108"],"import {actionTypes} from \"../action/Movies\"\r\n\r\nconst initialState = null;\r\n\r\nexport default (state = initialState, {  //eslint-disable-next-line:false\r\n    type,\r\n    payload\r\n}) => {\r\n    switch (type) {\r\n        case actionTypes.MOVIESNAME:\r\n            return payload;\r\n        case actionTypes.ALLCOMMENTS:\r\n            return payload\r\n        default:\r\n            return state\r\n    }\r\n}","H:\\个人项目\\CooperationProjects\\cooperation-project\\client\\src\\store\\action\\Movies.js",[],"H:\\个人项目\\CooperationProjects\\cooperation-project\\client\\src\\components\\Layout\\index.js",[],"H:\\个人项目\\CooperationProjects\\cooperation-project\\client\\src\\components\\DetailsComp\\index.js",["109"],"import React,{ Component} from 'react'\r\nimport { Layout ,Spin} from 'antd';\r\nimport {Link} from 'react-router-dom'\r\nimport * as data from '../../services/getData'\r\nimport styles from './index.module.css'\r\nimport  RatingComp from '../RatingComp'\r\nimport CommentComp from '../CommonComp/CommentComp'\r\nconst { Content } = Layout;\r\n\r\nexport default class DetailsComp extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            isLoading:true,\r\n            detail:null, //描述\r\n            allComment:null, //短评总条数\r\n            actorsIntroduction:null, //演员介绍\r\n            otherMovie:null, //其他电影\r\n            comment:null, //留言\r\n            startNum: 20, //起始数量20\r\n            title:null\r\n        }\r\n    }\r\n    componentWillMount(){\r\n        // console.log(this.props)\r\n    }\r\n    componentDidMount(){\r\n        data.default.getMovieDetail(this.props.match.params.id).then(r =>{\r\n            // console.log(r);\r\n                this.setState({\r\n                    title:r.title\r\n                })\r\n                const hotPage  = (\r\n                        <div className={styles.content}>\r\n                            <h1>{r.title}</h1>\r\n                            <div className={styles.subject}>\r\n                                <div className={styles.img}>\r\n                                    <img src={r.imgUrl} alt=\"\"/>\r\n                                </div>\r\n                                <div className={styles.info}>\r\n                                    <span>\r\n                                        <span className={styles.director}>\r\n                                           导演\r\n                                        </span>\r\n                                        ：\r\n                                        <span className={styles.name}>\r\n                                            {r.director}\r\n                                        </span>\r\n                                    </span>\r\n                                    <span>\r\n                                        <span className={styles.director}>\r\n                                           编剧\r\n                                        </span>\r\n                                        ：\r\n                                        <span className={styles.name}>\r\n                                            {r.director}\r\n                                        </span>\r\n                                    </span>\r\n                                    <span>\r\n                                        <span className={styles.director}>\r\n                                           主演\r\n                                        </span>\r\n                                        ：\r\n                                        <span className={styles.name}>\r\n                                            {r.actors}\r\n                                        </span>\r\n                                    </span>\r\n                                    <span>\r\n                                        <span className={styles.director}>\r\n                                           类型\r\n                                        </span>\r\n                                        ：\r\n                                        <span className={styles.name}>\r\n                                            {r.type}\r\n                                        </span>\r\n                                    </span>\r\n                                    <span>\r\n                                        <span className={styles.director}>\r\n                                           制片国家地区\r\n                                        </span>\r\n                                        ：\r\n                                        <span className={styles.name}>\r\n                                            {r.country}\r\n                                        </span>\r\n                                    </span>\r\n                                    <span>\r\n                                        <span className={styles.director}>\r\n                                           语言\r\n                                        </span>\r\n                                        ：\r\n                                        <span className={styles.name}>\r\n                                            {r.language}\r\n                                        </span>\r\n                                    </span>\r\n                                    <span>\r\n                                        <span className={styles.director}>\r\n                                           上映日期\r\n                                        </span>\r\n                                        ：\r\n                                        <span className={styles.name}>\r\n                                            {r.showDate}\r\n                                        </span>\r\n                                    </span>\r\n                                    <span>\r\n                                        <span className={styles.director}>\r\n                                           片长\r\n                                        </span>\r\n                                        ：\r\n                                        <span className={styles.name}>\r\n                                            {`${r.time}分钟`}\r\n                                        </span>\r\n                                    </span>\r\n                                    <span>\r\n                                        <span className={styles.director}>\r\n                                            又名\r\n                                        </span>\r\n                                        ：\r\n                                        <span className={styles.name}>\r\n                                            {r.englishName}\r\n                                        </span>\r\n                                    </span>\r\n                                </div>\r\n                            </div>\r\n                            <div className={styles.rate}>\r\n                                <h3>豆瓣评分</h3>\r\n                                <div className={styles.rater}>\r\n                                    {/* <span>{this.props.location.state.isRate}</span> */}\r\n                                    <RatingComp className={styles.sty} score={this.props.location.state.isRate}/>\r\n                                </div>\r\n                            </div>\r\n                            <div className={styles.introduction}>\r\n                                <p className={styles.title}>{`${r.title}的剧情介绍· · · · · ·`}</p>\r\n                                <p className={styles.describ}>{r.introduction}</p>\r\n                            </div>\r\n                        </div>\r\n                )\r\n                this.setState({\r\n                    detail:hotPage\r\n                })\r\n        })\r\n        data.default.getActorsInMovie(this.props.match.params.id).then(r =>{\r\n            const actorsPage = r.map((k,v) =>{\r\n                // console.log(k)\r\n                return(\r\n                    <div className={styles.box}>\r\n                        <li className={styles.celebrity}>\r\n                            <Link>\r\n                                <div className={styles.avatar}>\r\n                                    <img src={k.img} alt=\"\"/>\r\n                                </div>\r\n                            </Link>\r\n                            <div className={styles.infos}>\r\n                                <p className={styles.name}>\r\n                                    <Link>{k.name}</Link>\r\n                                </p>\r\n                                <p className={styles.role}>\r\n                                    {k.role}\r\n                                </p>\r\n                            </div>\r\n                        </li>   \r\n                    </div>\r\n                )\r\n            })\r\n            this.setState({\r\n                actorsIntroduction:actorsPage\r\n            })\r\n        })\r\n        data.default.getLikeByMovie(this.props.match.params.id).then(r=>{\r\n            // console.log(r);\r\n            const moviePage = r.map((k,v)=>{\r\n                return (\r\n                    <li className={styles.item}>\r\n                        <Link>\r\n                            <img src={k.img} alt=\"\"/>\r\n                        </Link>\r\n                        <p><Link to={``}>{k.title}</Link></p>\r\n                    </li>\r\n                )\r\n            })\r\n            this.setState({\r\n                otherMovie:moviePage\r\n            })\r\n        })\r\n        data.default.getCommentInMovie(this.props.match.params.id).then(r=>{\r\n            this.setState({\r\n                allComment:r[r.length-1]\r\n            })\r\n            const commentPage = r.map((k,v)=>{\r\n                // console.log(k)\r\n                if(v < r.length-1 ){\r\n                    return(\r\n                        <CommentComp name={k.name} date={k.date} rate={k.rate} useful={k.useful} content={k.content} />\r\n                    )\r\n                }\r\n                \r\n            })\r\n            this.setState({\r\n                comment:commentPage,\r\n            })\r\n        })\r\n    }\r\n        \r\n    render(){\r\n        if(this.state.isLoading){\r\n            // console.log(this.state.isLoading)\r\n            return (\r\n                <Content className={styles.containerBox}>\r\n                    {this.state.detail}\r\n                    {<h3 className={styles.h3}>{`${this.state.title}· · · · · ·`}\r\n                    <Link to={{\r\n                            pathname:`/celebrities/${this.props.match.params.id}`,\r\n                            state:`${this.state.title}`\r\n                        }}>（全部）\r\n                    </Link></h3>}\r\n                    <div className={styles.flex}>\r\n                        {this.state.actorsIntroduction}\r\n                    </div>\r\n                    {<h3 className={styles.h3}>\r\n                            {`喜欢这部电影的人也喜欢 · · · · · ·`}\r\n                    </h3>}\r\n                    <div className={styles.otherMovie}>\r\n                        <ul>\r\n                            {this.state.otherMovie}\r\n                        </ul>\r\n                    </div>\r\n                    {<h3 className={styles.h3}>{`${this.state.title}的短评· · · · · ·`}\r\n                            <Link to={{\r\n                                pathname:`/comment/${this.props.match.params.id}/start=${this.state.startNum}&limit=20&status=P&sort=new_score`,\r\n                                state:`${this.state.title}`,\r\n                                query:`${this.state.allComment}`\r\n                            }} >{`(全部${this.state.allComment}条)`}</Link>\r\n                    </h3>}\r\n                    <div className={styles.comment}>\r\n                        {this.state.comment}\r\n                        <div className={styles.more}>\r\n                            <Link to={{\r\n                                pathname:`/comment/${this.props.match.params.id}/start=${this.state.startNum}&limit=20&status=P&sort=new_score`,\r\n                                state:`${this.state.title}`,\r\n                                query:`${this.state.allComment}`\r\n                            }} >{`>> 更多短评 ${this.state.allComment}条`}</Link>\r\n                        </div>\r\n                    </div>\r\n                </Content>\r\n            )\r\n        }else{\r\n            return(\r\n                <div className={styles.cont}>\r\n                    <div className={styles.spin}>\r\n                        <Spin tip=\"Loading...\" delay=\"2000\" size=\"large\"/>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n    \r\n}","H:\\个人项目\\CooperationProjects\\cooperation-project\\client\\src\\components\\CommonComp\\CommentComp\\index.js",[],"H:\\个人项目\\CooperationProjects\\cooperation-project\\client\\src\\components\\CommonComp\\MovieComp\\index.js",[],"H:\\个人项目\\CooperationProjects\\cooperation-project\\client\\src\\components\\MovieComment\\index.js",[],"H:\\个人项目\\CooperationProjects\\cooperation-project\\client\\src\\components\\CommonComp\\PopularFilmComp\\index.js",["110","111"],"import React from 'react'\r\nimport styles from './index.module.css'\r\nimport {Link} from 'react-router-dom'\r\nimport RatingComp from '../../RatingComp'\r\n\r\nexport default function PopularFilmComp({people,contents,question,img,movieName,rate,id}){\r\n    return(\r\n        <div className={styles.review}>\r\n            <div className={styles.reviewHd}>\r\n                <a href=\"\">\r\n                    <img src={img} alt={movieName}/>\r\n                </a>\r\n            </div>\r\n            <div className={styles.reviewBd}>\r\n                <h3>\r\n                    {question}\r\n                </h3>\r\n                <div className={styles.reviewMeta}>\r\n                    <a href=\"\">{people}</a>\r\n                        {\"评论\"}\r\n                    <Link className={styles.movie} to={{\r\n                        pathname:`/details/${id}`,\r\n                        state:`${rate}`\r\n                        }}>\r\n                        {movieName}\r\n                    </Link>\r\n                    {rate!==0?<RatingComp score={rate}/>:\"\"}\r\n                </div>\r\n                <div className={styles.reviewContent}>\r\n                    {contents}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","H:\\个人项目\\CooperationProjects\\cooperation-project\\client\\src\\components\\AllMoviesActors\\index.js",["112","113"],"import React, { Component } from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport data from '../../services/getData'\r\nimport sty from './index.module.css'\r\n\r\nexport default class AllActors extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            director:{},\r\n            actors:null,\r\n            writers:null,\r\n            producers:null\r\n        }\r\n    }\r\n    /**\r\n     * \r\n     * @param {Array|Object} data 数据\r\n     * @param {Number} index 索引(可选选项)\r\n     */\r\n    commonStyle = (data,index)=>{\r\n        return (\r\n            <div className={sty.actor} key={data.length}>\r\n                <div className={sty.introduce}>\r\n                    <span>\r\n                        <Link to={`/actorIntroduce/${data.id}`}>\r\n                            <img src={data.img} alt=\"\"/>\r\n                        </Link>\r\n                    </span>\r\n                    <span className={sty.dir}>\r\n                        <p className={sty.name}>\r\n                            <Link to={`/actorIntroduce/${data.id}`}>{data.name}</Link>\r\n                        </p>\r\n                        <p className={sty.role}>{data.role}</p>\r\n                        <p>\r\n                            <span>代表作：</span>\r\n                            <span className={sty.works}>{Array.isArray(data.works)? data.works.join(\" / \") : \"\"}</span>\r\n                        </p>\r\n                    </span>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    componentDidMount(){\r\n        // console.log(this.props)\r\n        data.getMovieAllActorMsg(this.props.match.params.id).then(r=>{\r\n            console.log(r);\r\n            const actors = r.actors.map((k,v)=>{\r\n                return (\r\n                    this.commonStyle(k,v)\r\n                )\r\n            })\r\n            if(!Array.isArray(r.screenWriter)){\r\n                const writers = (\r\n                    this.commonStyle(r.screenWriter)\r\n                )\r\n                this.setState({\r\n                    writers:writers\r\n                })\r\n            }else{\r\n                const writers = r.screenWriter.map((k,v)=>{\r\n                    this.commonStyle(k,v);\r\n                })\r\n                this.setState({\r\n                    writers:writers\r\n                })\r\n            }\r\n            if(!Array.isArray(r.producer)){\r\n                const producers = (\r\n                   this.commonStyle(r.producer)\r\n                )\r\n                this.setState({\r\n                    producers:producers\r\n                })\r\n            }else{\r\n                const producers = r.producer.map((k,v)=>{\r\n                   this.commonStyle(k,v)\r\n                })\r\n                this.setState({\r\n                    producers:producers\r\n                })\r\n            }\r\n            this.setState({\r\n                director:{...r.director},\r\n                actors:actors,\r\n            })\r\n        })\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className={sty.celebrities}>\r\n                <h1>{`${this.props.location.state}演职员`}</h1>\r\n                <div className={sty.director}>\r\n                    <h2>{this.state.director.role}</h2>\r\n                    <div className={sty.introduce}>\r\n                        <span>\r\n                            <Link>\r\n                                <img src={this.state.director.img} alt=\"\"/>\r\n                            </Link>\r\n                        </span>\r\n                        <span className={sty.dir}>\r\n                            <p className={sty.name}>\r\n                                <Link>{this.state.director.name}</Link>\r\n                            </p>\r\n                            <p className={sty.role}>{this.state.director.role}</p>\r\n                            <p>\r\n                                <span>代表作：</span>\r\n                                <span className={sty.works}>{Array.isArray(this.state.director.works)? this.state.director.works.join(\" / \") : \"\"}</span>\r\n                            </p>\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n                <div className={sty.actors}>\r\n                    <h2>{`演员Actors`}</h2>\r\n                    <div className={sty.allActors}>\r\n                        {this.state.actors}\r\n                    </div>\r\n                    \r\n                </div>\r\n                <div className={sty.writer}>\r\n                    <h2>{`编剧Writer`}</h2>\r\n                    <div className={sty.allWriter}>\r\n                        {this.state.writers}\r\n                    </div>\r\n                </div>\r\n                <div className={sty.producer}>\r\n                    <h2>{`制片人Producer`}</h2>\r\n                    <div className={sty.allProducer}>\r\n                        {this.state.producers}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","H:\\个人项目\\CooperationProjects\\cooperation-project\\client\\src\\components\\ActorIntroduce\\index.js",[],{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","replacedBy":"117"},{"ruleId":"118","severity":1,"message":"119","line":76,"column":89,"nodeType":"120","endLine":76,"endColumn":100},{"ruleId":"114","replacedBy":"121"},{"ruleId":"116","replacedBy":"122"},{"ruleId":"123","severity":1,"message":"124","line":2,"column":1,"nodeType":"125","endLine":88,"endColumn":2},{"ruleId":"123","severity":1,"message":"126","line":5,"column":1,"nodeType":"125","endLine":17,"endColumn":2},{"ruleId":"127","severity":1,"message":"128","line":188,"column":44,"nodeType":"129","messageId":"130","endLine":188,"endColumn":46},{"ruleId":"131","severity":1,"message":"132","line":10,"column":17,"nodeType":"133","endLine":10,"endColumn":28},{"ruleId":"131","severity":1,"message":"132","line":19,"column":21,"nodeType":"133","endLine":19,"endColumn":32},{"ruleId":"127","severity":1,"message":"134","line":61,"column":57,"nodeType":"129","messageId":"135","endLine":61,"endColumn":59},{"ruleId":"127","severity":1,"message":"134","line":76,"column":55,"nodeType":"129","messageId":"135","endLine":76,"endColumn":57},"no-native-reassign",["136"],"no-negated-in-lhs",["137"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute",["136"],["137"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","Assign arrow function to a variable before exporting as module default","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","Array.prototype.map() expects a return value from arrow function.","expectedInside","no-global-assign","no-unsafe-negation"]