[{"C:\\Users\\hesu\\Desktop\\cooperation-project\\client\\src\\index.js":"1","C:\\Users\\hesu\\Desktop\\cooperation-project\\client\\src\\App.js":"2","C:\\Users\\hesu\\Desktop\\cooperation-project\\client\\src\\page\\index.js":"3","C:\\Users\\hesu\\Desktop\\cooperation-project\\client\\src\\store\\index.js":"4","C:\\Users\\hesu\\Desktop\\cooperation-project\\client\\src\\components\\Header\\index.js":"5","C:\\Users\\hesu\\Desktop\\cooperation-project\\client\\src\\components\\Layout\\index.js":"6","C:\\Users\\hesu\\Desktop\\cooperation-project\\client\\src\\components\\Footer\\index.js":"7","C:\\Users\\hesu\\Desktop\\cooperation-project\\client\\src\\components\\Main\\index.js":"8","C:\\Users\\hesu\\Desktop\\cooperation-project\\client\\src\\store\\reducer\\index.js":"9","C:\\Users\\hesu\\Desktop\\cooperation-project\\client\\src\\components\\Index\\index.js":"10","C:\\Users\\hesu\\Desktop\\cooperation-project\\client\\src\\components\\RankList\\index.js":"11","C:\\Users\\hesu\\Desktop\\cooperation-project\\client\\src\\components\\DetailsComp\\index.js":"12","C:\\Users\\hesu\\Desktop\\cooperation-project\\client\\src\\components\\MovieComment\\index.js":"13","C:\\Users\\hesu\\Desktop\\cooperation-project\\client\\src\\store\\reducer\\Movies.js":"14","C:\\Users\\hesu\\Desktop\\cooperation-project\\client\\src\\services\\getData.js":"15","C:\\Users\\hesu\\Desktop\\cooperation-project\\client\\src\\components\\RatingComp\\index.js":"16","C:\\Users\\hesu\\Desktop\\cooperation-project\\client\\src\\components\\CommonComp\\CommentComp\\index.js":"17","C:\\Users\\hesu\\Desktop\\cooperation-project\\client\\src\\components\\CommonComp\\MovieComp\\index.js":"18","C:\\Users\\hesu\\Desktop\\cooperation-project\\client\\src\\store\\action\\Movies.js":"19","C:\\Users\\hesu\\Desktop\\cooperation-project\\client\\src\\components\\NotFound\\index.js":"20","C:\\Users\\hesu\\Desktop\\cooperation-project\\client\\src\\components\\Sort\\index.js":"21","C:\\Users\\hesu\\Desktop\\cooperation-project\\client\\src\\components\\CheckoutComp\\index.js":"22","C:\\Users\\hesu\\Desktop\\cooperation-project\\client\\src\\utils\\jieliu.js":"23","C:\\Users\\hesu\\Desktop\\cooperation-project\\client\\src\\utils\\lazyLoad.js":"24"},{"size":231,"mtime":1610608246285,"results":"25","hashOfConfig":"26"},{"size":341,"mtime":1610608246262,"results":"27","hashOfConfig":"26"},{"size":654,"mtime":1610608246286,"results":"28","hashOfConfig":"26"},{"size":131,"mtime":1610608246288,"results":"29","hashOfConfig":"26"},{"size":1009,"mtime":1610608246277,"results":"30","hashOfConfig":"26"},{"size":743,"mtime":1610608246279,"results":"31","hashOfConfig":"26"},{"size":139,"mtime":1610608246276,"results":"32","hashOfConfig":"26"},{"size":789,"mtime":1610610300174,"results":"33","hashOfConfig":"26"},{"size":120,"mtime":1610608246289,"results":"34","hashOfConfig":"26"},{"size":3457,"mtime":1610608246277,"results":"35","hashOfConfig":"26"},{"size":1523,"mtime":1610608246282,"results":"36","hashOfConfig":"26"},{"size":11674,"mtime":1610953410288,"results":"37","hashOfConfig":"26"},{"size":3769,"mtime":1610608246280,"results":"38","hashOfConfig":"26"},{"size":393,"mtime":1610608246288,"results":"39","hashOfConfig":"26"},{"size":2471,"mtime":1610869340996,"results":"40","hashOfConfig":"26"},{"size":395,"mtime":1610608246284,"results":"41","hashOfConfig":"26"},{"size":1187,"mtime":1610608246272,"results":"42","hashOfConfig":"26"},{"size":1967,"mtime":1610952043403,"results":"43","hashOfConfig":"26"},{"size":370,"mtime":1610608246287,"results":"44","hashOfConfig":"26"},{"size":498,"mtime":1610608246281,"results":"45","hashOfConfig":"26"},{"size":2986,"mtime":1610957980732,"results":"46","hashOfConfig":"26"},{"size":659,"mtime":1610732189215,"results":"47","hashOfConfig":"26"},{"size":265,"mtime":1610956629662,"results":"48","hashOfConfig":"26"},{"size":283,"mtime":1610956996533,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"1oj5xbg",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"52"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"52"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"52"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"52"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"52"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"52"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"52"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"52"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"C:\\Users\\hesu\\Desktop\\cooperation-project\\client\\src\\index.js",[],["108","109"],"C:\\Users\\hesu\\Desktop\\cooperation-project\\client\\src\\App.js",[],"C:\\Users\\hesu\\Desktop\\cooperation-project\\client\\src\\page\\index.js",[],"C:\\Users\\hesu\\Desktop\\cooperation-project\\client\\src\\store\\index.js",[],"C:\\Users\\hesu\\Desktop\\cooperation-project\\client\\src\\components\\Header\\index.js",[],"C:\\Users\\hesu\\Desktop\\cooperation-project\\client\\src\\components\\Layout\\index.js",[],"C:\\Users\\hesu\\Desktop\\cooperation-project\\client\\src\\components\\Footer\\index.js",[],"C:\\Users\\hesu\\Desktop\\cooperation-project\\client\\src\\components\\Main\\index.js",[],"C:\\Users\\hesu\\Desktop\\cooperation-project\\client\\src\\store\\reducer\\index.js",[],"C:\\Users\\hesu\\Desktop\\cooperation-project\\client\\src\\components\\Index\\index.js",["110","111","112"],"import React, {\r\n    Component\r\n } from 'react'\r\n import * as data from '../../services/getData'\r\n import MovieComp from '../CommonComp/MovieComp'\r\n import styles from './index.module.css'\r\n \r\n export default class Main extends Component{\r\n    constructor(props){\r\n       super(props);\r\n       this.state={\r\n          hot:[],\r\n          hotMovies:[],\r\n          popularFilm:[],\r\n       }\r\n    }\r\n    componentDidMount() {\r\n       const self = this;\r\n       data.default.getInProgressHot().then(res=>{ //正在热映\r\n         const hotPage = res.everyMovies.map((k,v)=>{\r\n            //  console.log(k)\r\n             return (\r\n                <div key={v}>\r\n                   <MovieComp data={k}/>\r\n                </div>\r\n             )\r\n          })\r\n          self.setState({\r\n             hot:[...hotPage]\r\n          })\r\n       })\r\n       data.default.getMoviesPage().then(res=>{ //热门电影\r\n          const movies = res.subjects.map((k,v) =>{\r\n             // console.log(k)\r\n             return (\r\n                      <div className={styles.page1} key={v}>\r\n                         <a href=\"item\">\r\n                            <div className={styles.coverWp}>\r\n                               <img src={k.cover} alt={k.title}/>\r\n                            </div>\r\n                            <p className={styles.title}>{k.title}</p>\r\n                         </a>\r\n                      </div>\r\n             )\r\n          })\r\n          self.setState({\r\n             hotMovies:[...movies]\r\n          })\r\n       })\r\n       data.default.getPopularFilmReviews().then(res=>{ //正在热映\r\n          const popular = res.reviewMovs.map((k,v)=>{\r\n             // console.log(k);\r\n             return (\r\n                <>\r\n                   <div className={styles.review} key={v}>\r\n                      <div className={styles.reviewHd}>\r\n                         <a href=\"\">\r\n                            <img src={k.url} alt={k.titles}/>\r\n                         </a>\r\n                      </div>\r\n                      <div className={styles.reviewBd}>\r\n                         <h3>\r\n                            <a href=\"\"></a>\r\n                         </h3>\r\n                         <div className={styles.reviewContent}>\r\n                            {k.contents}\r\n                         </div>\r\n                      </div>\r\n                   </div>\r\n                </>\r\n             )\r\n          })\r\n          self.setState({\r\n             popularFilm:[...popular]\r\n          })\r\n       })\r\n    }\r\n \r\n    render() {\r\n       return ( \r\n          <div className={styles.box}> \r\n             <div className={styles.hotMovies}>\r\n                <h2 className={styles.title}>{this.state.hotMovies.title}</h2>\r\n                <div className={styles.hot}>\r\n                   <ul>\r\n                      {this.state.hot}\r\n                   </ul>\r\n                </div>\r\n             </div>\r\n             <div className={styles.moviePage}>\r\n                <h2 className={styles.title}>最近热门电影</h2>\r\n                <div>\r\n                   {this.state.hotMovies}\r\n                </div>\r\n             </div>\r\n             <div className={styles.popular}>\r\n                <h2 className={styles.title}>{this.state.popularFilm.titleIndexCon}</h2>\r\n                <div className={styles.reviews}>\r\n                   {this.state.popularFilm}\r\n                </div>\r\n             </div>\r\n          </div>\r\n       )\r\n    }\r\n \r\n }","C:\\Users\\hesu\\Desktop\\cooperation-project\\client\\src\\components\\RankList\\index.js",["113"],"import React, { Component } from 'react';\r\nimport RatingComp from '../RatingComp';\r\nimport styles from './index.module.css';\r\nimport * as data  from '../../services/getData'\r\n\r\nexport default class RankList extends Component{\r\n  constructor(){\r\n    super();\r\n    this.state={\r\n      sortList:[]\r\n    }\r\n  }\r\n  componentDidMount(){\r\n    data.default.getSortMovies().then(res=>{\r\n      console.log(res)\r\n      const sorts = res.map(m => {\r\n        return (\r\n        <a href=\"#\" key={m.id} >\r\n            <div className={`${styles.itemWrapper}`}>\r\n              <div className={`${styles.item} clearfix`}>\r\n                <div className={`${styles.cover} fl`}>\r\n                  <img className={styles.img} src={m.cover} alt=\"\" />\r\n                </div>\r\n                <div className={`${styles.description} fl`}>\r\n                  <p className=\"name\">{m.title}</p>\r\n                  <p className=\"info\">{m.description}</p>\r\n                  <div className={styles.rote}>\r\n                    <RatingComp score={m.rate} />\r\n                    <span>( {m.rater}人评价 )</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n        </a>)\r\n      });\r\n      this.setState({\r\n        sortList:sorts\r\n      })\r\n    })\r\n  }\r\n\r\n  render(){\r\n    return <div className={styles.wrapper}>\r\n        <div className={styles.title}>\r\n          <h2>Movie Club 排行榜</h2>\r\n        </div>\r\n        <div>\r\n          {this.state.sortList}\r\n        </div>\r\n  </div>\r\n  }\r\n  \r\n}\r\n\r\n\r\n\r\n","C:\\Users\\hesu\\Desktop\\cooperation-project\\client\\src\\components\\DetailsComp\\index.js",["114"],"import React,{ Component} from 'react'\r\nimport { Layout ,Spin} from 'antd';\r\nimport {Link} from 'react-router-dom'\r\nimport * as data from '../../services/getData'\r\nimport styles from './index.module.css'\r\nimport  RatingComp from '../RatingComp'\r\nimport CommentComp from '../CommonComp/CommentComp'\r\nconst { Content } = Layout;\r\n\r\nexport default class DetailsComp extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            isLoading:true,\r\n            detail:null, //描述\r\n            allComment:null, //短评总条数\r\n            actorsIntroduction:null, //演员介绍\r\n            otherMovie:null, //其他电影\r\n            comment:null, //留言\r\n            startNum: 20, //起始数量20\r\n            title:null\r\n        }\r\n    }\r\n    componentWillMount(){\r\n        // console.log(this.props)\r\n    }\r\n    componentDidMount(){\r\n        data.default.getMovieDetail(this.props.match.params.id).then(r =>{\r\n            // console.log(r);\r\n                \r\n                const hotPage  = (\r\n                        <div className={styles.content}>\r\n                            <h1>{r.title}</h1>\r\n                            <div className={styles.subject}>\r\n                                <div className={styles.img}>\r\n                                    <img src={r.imgUrl} alt=\"\"/>\r\n                                </div>\r\n                                <div className={styles.info}>\r\n                                    <span>\r\n                                        <span className={styles.director}>\r\n                                           导演\r\n                                        </span>\r\n                                        :\r\n                                        <span className={styles.name}>\r\n                                            {r.director}\r\n                                        </span>\r\n                                    </span>\r\n                                    <span>\r\n                                        <span className={styles.director}>\r\n                                           编剧\r\n                                        </span>\r\n                                        :\r\n                                        <span className={styles.name}>\r\n                                            {r.director}\r\n                                        </span>\r\n                                    </span>\r\n                                    <span>\r\n                                        <span className={styles.director}>\r\n                                           主演\r\n                                        </span>\r\n                                        :\r\n                                        <span className={styles.name}>\r\n                                            {r.actors}\r\n                                        </span>\r\n                                    </span>\r\n                                    <span>\r\n                                        <span className={styles.director}>\r\n                                           类型\r\n                                        </span>\r\n                                        :\r\n                                        <span className={styles.name}>\r\n                                            {r.type}\r\n                                        </span>\r\n                                    </span>\r\n                                    <span>\r\n                                        <span className={styles.director}>\r\n                                           制片国家地区\r\n                                        </span>\r\n                                        :\r\n                                        <span className={styles.name}>\r\n                                            {r.country}\r\n                                        </span>\r\n                                    </span>\r\n                                    <span>\r\n                                        <span className={styles.director}>\r\n                                           语言\r\n                                        </span>\r\n                                        :\r\n                                        <span className={styles.name}>\r\n                                            {r.language}\r\n                                        </span>\r\n                                    </span>\r\n                                    <span>\r\n                                        <span className={styles.director}>\r\n                                           上映日期\r\n                                        </span>\r\n                                        :\r\n                                        <span className={styles.name}>\r\n                                            {r.showDate}\r\n                                        </span>\r\n                                    </span>\r\n                                    <span>\r\n                                        <span className={styles.director}>\r\n                                           片长\r\n                                        </span>\r\n                                        :\r\n                                        <span className={styles.name}>\r\n                                            {`${r.time}分钟`}\r\n                                        </span>\r\n                                    </span>\r\n                                    <span>\r\n                                        <span className={styles.director}>\r\n                                            又名\r\n                                        </span>\r\n                                        :\r\n                                        <span className={styles.name}>\r\n                                            {r.englishName}\r\n                                        </span>\r\n                                    </span>\r\n                                </div>\r\n                            </div>\r\n                            <div className={styles.rate}>\r\n                                <h3>豆瓣评分</h3>\r\n                                <div className={styles.rater}>\r\n                                    {/* <span>{this.props.location.state.isRate}</span> */}\r\n                                    <RatingComp className={styles.sty} score={this.props.location.state.isRate}/>\r\n                                </div>\r\n                            </div>\r\n                            <div className={styles.introduction}>\r\n                                <p className={styles.title}>{`${r.title}的剧情介绍· · · · · ·`}</p>\r\n                                <p className={styles.describ}>{r.introduction}</p>\r\n                            </div>\r\n                        </div>\r\n                )\r\n                this.setState({\r\n                    ...this.state,\r\n                    title:r.title,\r\n                    detail:hotPage\r\n                })\r\n        })\r\n        data.default.getActorsInMovie(this.props.match.params.id).then(r =>{\r\n            const actorsPage = r.map((k,v) =>{\r\n                // console.log(k)\r\n                return(\r\n                    <div className={styles.box}>\r\n                        <li className={styles.celebrity}>\r\n                            <Link>\r\n                                <div className={styles.avatar}>\r\n                                    <img src={k.img} alt=\"\"/>\r\n                                </div>\r\n                            </Link>\r\n                            <div className={styles.infos}>\r\n                                <p className={styles.name}>\r\n                                    <Link>{k.name}</Link>\r\n                                </p>\r\n                                <p className={styles.role}>\r\n                                    {k.role}\r\n                                </p>\r\n                            </div>\r\n                        </li>   \r\n                    </div>\r\n                )\r\n            })\r\n            this.setState({\r\n                actorsIntroduction:actorsPage\r\n            })\r\n        })\r\n        data.default.getLikeByMovie(this.props.match.params.id).then(r=>{\r\n            // console.log(r);\r\n            const moviePage = r.map((k,v)=>{\r\n                return (\r\n                    <li className={styles.item}>\r\n                        <Link>\r\n                            <img src={k.img} alt=\"\"/>\r\n                        </Link>\r\n                        <p><Link to={``}>{k.title}</Link></p>\r\n                    </li>\r\n                )\r\n            })\r\n            this.setState({\r\n                otherMovie:moviePage\r\n            })\r\n        })\r\n        data.default.getCommentInMovie(this.props.match.params.id).then(r=>{\r\n            this.setState({\r\n                allComment:r[r.length-1]\r\n            })\r\n            const commentPage = r.map((k,v)=>{\r\n                // console.log(k)\r\n                if(v < r.length-1 ){\r\n                    return(\r\n                        <CommentComp name={k.name} date={k.date} rate={k.rate} useful={k.useful} content={k.content} />\r\n                    )\r\n                }\r\n                \r\n            })\r\n            this.setState({\r\n                comment:commentPage,\r\n            })\r\n        })\r\n        // data.default.getAllCommentsInMovie({\r\n        //     id:this.props.match.params.id,\r\n        //   }).then(r=>{\r\n        //     console.log(r)\r\n        // })\r\n    }\r\n        \r\n    render(){\r\n        if(this.state.isLoading){\r\n            // console.log(this.state.isLoading)\r\n            return (\r\n                <Content>\r\n                    {this.state.detail}\r\n                    {<h3 className={styles.h3}>{`${this.state.title}· · · · · ·`}</h3>}\r\n                    <div className={styles.flex}>\r\n                        {this.state.actorsIntroduction}\r\n                    </div>\r\n                    {<h3 className={styles.h3}>\r\n                            {`喜欢这部电影的人也喜欢 · · · · · ·`}\r\n                    </h3>}\r\n                    <div className={styles.otherMovie}>\r\n                        <ul>\r\n                            {this.state.otherMovie}\r\n                        </ul>\r\n                    </div>\r\n                    {<h3 className={styles.h3}>{`${this.state.title}的短评· · · · · ·`}\r\n                            <Link to={{\r\n                                pathname:`/comment/${this.props.match.params.id}/start=${this.state.startNum}&limit=20&status=P&sort=new_score`,\r\n                                state:`${this.state.title}`,\r\n                                query:`${this.state.allComment}`\r\n                            }} >{`(全部${this.state.allComment}条)`}</Link>\r\n                    </h3>}\r\n                    <div className={styles.comment}>\r\n                        {this.state.comment}\r\n                        <div className={styles.more}>\r\n                            <Link to={{\r\n                                pathname:`/comment/${this.props.match.params.id}/start=${this.state.startNum}&limit=20&status=P&sort=new_score`,\r\n                                state:`${this.state.title}`,\r\n                                query:`${this.state.allComment}`\r\n                            }} >{`>> 更多短评 ${this.state.allComment}条`}</Link>\r\n                        </div>\r\n                    </div>\r\n                </Content>\r\n            )\r\n        }else{\r\n            return(\r\n                <div className={styles.cont}>\r\n                    <div className={styles.spin}>\r\n                        <Spin tip=\"Loading...\" delay=\"2000\" size=\"large\"/>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n    \r\n}","C:\\Users\\hesu\\Desktop\\cooperation-project\\client\\src\\components\\MovieComment\\index.js",[],"C:\\Users\\hesu\\Desktop\\cooperation-project\\client\\src\\store\\reducer\\Movies.js",["115"],"import {actionTypes} from \"../action/Movies\"\r\n\r\nconst initialState = null;\r\n\r\nexport default (state = initialState, {  //eslint-disable-next-line:false\r\n    type,\r\n    payload\r\n}) => {\r\n    switch (type) {\r\n        case actionTypes.MOVIESNAME:\r\n            return payload;\r\n        case actionTypes.ALLCOMMENTS:\r\n            return payload\r\n        default:\r\n            return state\r\n    }\r\n}","C:\\Users\\hesu\\Desktop\\cooperation-project\\client\\src\\services\\getData.js",["116"],"import axios from 'axios';\r\nexport default  {\r\n    //正在热映\r\n    getInProgressHot() {\r\n        return axios.get('/home/hoting').then(res => {\r\n            return res.data;\r\n        })\r\n    },\r\n    //热门电影\r\n    getMoviesPage() {\r\n        return axios.get('/home/hot').then(res => {\r\n            return res.data;\r\n        })\r\n    },\r\n    //最受欢迎影评\r\n    getPopularFilmReviews() {\r\n        return axios.get('/home/popularFilmReviews').then(res => {\r\n            return res.data;\r\n        })\r\n    },\r\n    //排行榜\r\n    getSortMovies() {\r\n        return axios.get('/sort/newest').then(res => {\r\n            return res.data;\r\n        })\r\n    },\r\n    //分类\r\n    getClasseMovie(condition) {\r\n        return axios.get('/classe', {\r\n            params: {\r\n                ...condition,\r\n            },\r\n        }).then(res => {\r\n            return res.data;\r\n        });\r\n    },\r\n    //电影详情描述\r\n    getMovieDetail(id) {\r\n        return axios.get(`/movie/detail`,{params:{id}}).then(res => {\r\n            return res.data;\r\n        })\r\n    },\r\n    //当前电影页部分参与演员\r\n    getActorsInMovie(id){\r\n        return axios.get(`/movie/detail/lessactors`,{params:{id}}).then(res=>{\r\n            return res.data;\r\n        })\r\n    },\r\n    //演员的详情\r\n    getActorDetail(id) {\r\n        return axios.get('/movie/detail/other',{params:{id}}).then(res => {\r\n            return res.data;\r\n        })\r\n    },\r\n    //某个演员的所有作品\r\n    // getActorAllMovie(id, sortby = 'vote', format = 'pic', start = 0){\r\n    //     return axios.get('/product',{params:{id, sortby, format, start}}).then(res => {\r\n    //         return res.data;\r\n    //     })\r\n    // },\r\n    //当前电影的部分评论\r\n    getCommentInMovie(id){\r\n        return axios.get('/movie/detail/lesscomments',{params:{id}}).then(res => {\r\n            return res.data;\r\n        })\r\n    },\r\n    //某个电影的全部评论\r\n    getAllCommentsInMovie({\r\n        id,\r\n        start = 20,\r\n        sort = 'new_score',\r\n        limit = 20,\r\n        status = 'P',\r\n        percent_type= '',\r\n      } = {}){\r\n        return axios.get('/movie/comments',{params:{id,start,sort,limit,status,percent_type}}).then(res => {\r\n            return res.data;\r\n        })\r\n    },\r\n    //喜欢某部电影的还喜欢看\r\n    getLikeByMovie(id){\r\n        return axios.get('/movie/detail/other',{params:{id}}).then(res => {\r\n            return res.data;\r\n        })\r\n    },\r\n}","C:\\Users\\hesu\\Desktop\\cooperation-project\\client\\src\\components\\RatingComp\\index.js",[],"C:\\Users\\hesu\\Desktop\\cooperation-project\\client\\src\\components\\CommonComp\\CommentComp\\index.js",[],"C:\\Users\\hesu\\Desktop\\cooperation-project\\client\\src\\components\\CommonComp\\MovieComp\\index.js",[],["117","118"],"C:\\Users\\hesu\\Desktop\\cooperation-project\\client\\src\\store\\action\\Movies.js",[],"C:\\Users\\hesu\\Desktop\\cooperation-project\\client\\src\\components\\NotFound\\index.js",["119"],"import React from 'react'\r\nimport styles from './index.module.css'\r\nimport {Button} from 'antd'\r\nexport default function NotFound(props){\r\n    return (\r\n        <div className=\"not-found\"\r\n        >\r\n            <h2 className='h2'>404</h2>\r\n            <div className=\"text\">糟糕！页面不存在</div>\r\n            <Button className=\"ant-btn\" onClick={()=>{\r\n                props.history.push('/')\r\n            }}>\r\n                回到首页\r\n            </Button>\r\n        </div>\r\n    )\r\n}","C:\\Users\\hesu\\Desktop\\cooperation-project\\client\\src\\components\\Sort\\index.js",["120","121"],"import React, { useState, useEffect } from 'react'\r\nimport styles from './index.module.css';\r\nimport CheckoutComp from '../CheckoutComp';\r\nimport MovieComp from '../CommonComp/MovieComp';\r\nimport apis from '../../services/getData';\r\nimport jieliu from '../../utils/jieliu';\r\nimport lazyLoad from '../../utils/lazyLoad';\r\n\r\nconst arrtsArr = [\r\n  ['全部类型', '剧情', '喜剧', '动作', '爱情', '科幻', '动画', '悬疑', '惊悚', '恐怖', '犯罪', '同性', '音乐', '歌舞', '传记', '历史', '战争', '西部', '奇幻', '冒险', '灾难', '武侠', '情色'],\r\n  ['全部地区', '中国大陆', '欧美', '美国', '中国香港', '中国台湾', '日本', '韩国', '英国', '法国', '德国', '意大利', '西班牙', '印度', '泰国', '俄罗斯', '伊朗', '加拿大', '澳大利亚', '爱尔兰', '瑞典', '巴西'],\r\n  ['全部年代', '2020', '2019', '2010年代', '90年代', '80年代', '70年代', '60年代', '更早'],\r\n  ['全部特色', '经典', '青春', '文艺', '搞笑', '励志', '魔幻', '感人', '女性', '黑帮'],\r\n];\r\n\r\nexport default function Sort() {\r\n  const [condition, setCondition] = useState({\r\n    sort: 'U',\r\n    start: 0,\r\n    tags: '',\r\n    range: '0,10',\r\n    genres: '',\r\n    countries: '',\r\n    year_range: '',\r\n  });\r\n  const [tags, setTags] = useState([]);\r\n  const [moviesList, setMoviesList] = useState([]);\r\n  useEffect(() => {\r\n    document.onscroll = jieliu(() => {\r\n      lazyLoad(() => {\r\n        setCondition(prev => {\r\n          return {\r\n            ...prev,\r\n            start: prev.start + 20,\r\n          }\r\n        })\r\n      }, document.getElementById('root'));\r\n    }, 1000)\r\n    return () => {\r\n      document.onscroll = null;\r\n    }\r\n  }, []);\r\n  useEffect(async () => {\r\n    console.log(condition)\r\n    const result = await apis.getClasseMovie(condition);\r\n    setMoviesList([...moviesList, ...result.data]);\r\n  }, [condition]);\r\n  let movieEle = moviesList.map(it => <MovieComp key={it.id} data={{\r\n    id: [it.id],\r\n    rate: it.rate,\r\n    img: it.cover,\r\n    movieName: it.title,\r\n    director: it.directors,\r\n    actors: it.casts,\r\n  }} />);\r\n  if (movieEle.length === 0) {\r\n    movieEle = <div>暂无数据</div>;\r\n  }\r\n\r\n  const checkouts = arrtsArr.map(attrs => <CheckoutComp key={attrs[0]} attrs={attrs} onCheckout={(key, value) => {\r\n    const tagIndex = tags.findIndex(it => it[0] === key);\r\n    const newTags = [...tags];\r\n    if (tagIndex >= 0) {\r\n      newTags[tagIndex] = [key, value];\r\n    } else {\r\n      newTags.push([key, value]);\r\n    }\r\n    setTags(() => {\r\n      setCondition({\r\n        ...condition,\r\n        tags: newTags.map(it => it[1]).filter(it => it).join(','),\r\n        start: 0,\r\n      });\r\n      setMoviesList([]);\r\n      return newTags;\r\n    });\r\n  }} />)\r\n  return (\r\n    <div className={styles.sortWrapper}>\r\n      {checkouts}\r\n      <div className={`${styles.movieList}`}>\r\n        {/* 电影列表 */}\r\n        {movieEle}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","C:\\Users\\hesu\\Desktop\\cooperation-project\\client\\src\\components\\CheckoutComp\\index.js",["122"],"import React, { useState } from 'react'\r\nimport styles from './index.module.css';\r\n\r\nexport default function ChecoutComp(props) {\r\n  const [tag, setTag] = useState(props.attrs[0]);\r\n  const spans = props.attrs.map(it => <span\r\n    className={`${styles.tag} ${it == tag ? styles.active : ''}`}\r\n    key={it}\r\n    onClick={() => {\r\n      setTag(it);\r\n      if (it === props.attrs[0]) {\r\n        props.onCheckout && props.onCheckout(props.attrs[0], '');\r\n      } else {\r\n        props.onCheckout && props.onCheckout(props.attrs[0], it);\r\n      }\r\n    }}\r\n  >{it}</span>);\r\n  return (\r\n    <div className={styles.itemWrapper}>\r\n      {spans}\r\n    </div>\r\n  )\r\n}\r\n","C:\\Users\\hesu\\Desktop\\cooperation-project\\client\\src\\utils\\jieliu.js",[],"C:\\Users\\hesu\\Desktop\\cooperation-project\\client\\src\\utils\\lazyLoad.js",[],{"ruleId":"123","replacedBy":"124"},{"ruleId":"125","replacedBy":"126"},{"ruleId":"127","severity":1,"message":"128","line":57,"column":26,"nodeType":"129","endLine":57,"endColumn":37},{"ruleId":"130","severity":1,"message":"131","line":63,"column":29,"nodeType":"129","endLine":63,"endColumn":40},{"ruleId":"127","severity":1,"message":"128","line":63,"column":29,"nodeType":"129","endLine":63,"endColumn":40},{"ruleId":"127","severity":1,"message":"128","line":18,"column":9,"nodeType":"129","endLine":18,"endColumn":33},{"ruleId":"132","severity":1,"message":"133","line":188,"column":44,"nodeType":"134","messageId":"135","endLine":188,"endColumn":46},{"ruleId":"136","severity":1,"message":"137","line":5,"column":1,"nodeType":"138","endLine":17,"endColumn":2},{"ruleId":"136","severity":1,"message":"139","line":2,"column":1,"nodeType":"138","endLine":86,"endColumn":2},{"ruleId":"123","replacedBy":"140"},{"ruleId":"125","replacedBy":"141"},{"ruleId":"142","severity":1,"message":"143","line":2,"column":8,"nodeType":"144","messageId":"145","endLine":2,"endColumn":14},{"ruleId":"146","severity":1,"message":"147","line":43,"column":13,"nodeType":"134","endLine":47,"endColumn":4},{"ruleId":"146","severity":1,"message":"148","line":47,"column":6,"nodeType":"149","endLine":47,"endColumn":17,"suggestions":"150"},{"ruleId":"151","severity":1,"message":"152","line":7,"column":36,"nodeType":"153","messageId":"154","endLine":7,"endColumn":38},"no-native-reassign",["155"],"no-negated-in-lhs",["156"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","Assign object to a variable before exporting as module default",["155"],["156"],"no-unused-vars","'styles' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","React Hook useEffect has a missing dependency: 'moviesList'. Either include it or remove the dependency array. You can also do a functional update 'setMoviesList(m => ...)' if you only need 'moviesList' in the 'setMoviesList' call.","ArrayExpression",["157"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation",{"desc":"158","fix":"159"},"Update the dependencies array to be: [condition, moviesList]",{"range":"160","text":"161"},[1618,1629],"[condition, moviesList]"]